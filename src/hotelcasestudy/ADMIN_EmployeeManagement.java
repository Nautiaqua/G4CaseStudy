/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelcasestudy;

import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Nardz Ablaza
 */
public class ADMIN_EmployeeManagement extends connect {
DefaultTableModel MODEL = new DefaultTableModel() {
    @Override
    public boolean isCellEditable(int row, int column) {
        return false; 
    }
};
    int x=0;
    /**
     * Creates new form ADMIN_UserManagement
     */
    public ADMIN_EmployeeManagement() {
        UIManager.put("Button.arc", 20);
        initComponents();
        DoConnect();
        Select();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/images/LOGO_favicon.png")));
    }
    public void Select(){
        String [] columnsNames = {"ADMIN_ID","PASSWORD","EMAIL","CREATED_ON"};
        MODEL.setColumnIdentifiers(columnsNames);
        try{
            String query = "SELECT * FROM ADMIN";
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);
            while(rs.next()){
                i=rs.getString("ADMIN_ID");
                s=rs.getString("PASSWORD");
                n=rs.getString("EMAIL");
                u=rs.getString("CREATED_ON");
                MODEL.addRow(new Object []{i,s,n,u});
                x++;
                        
            }
        }catch(SQLException err){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        remove_warning = new javax.swing.JPopupMenu();
        remove_text = new javax.swing.JMenuItem();
        TF7 = new javax.swing.JTextField();
        TF6 = new javax.swing.JTextField();
        TF5 = new javax.swing.JTextField();
        TF1 = new javax.swing.JTextField();
        background = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        logout_btn2 = new javax.swing.JButton();
        return_btn913 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        remove_text.setBackground(new java.awt.Color(237, 234, 233));
        remove_text.setFont(new java.awt.Font("Liberation Sans", 1, 12)); // NOI18N
        remove_text.setForeground(new java.awt.Color(255, 51, 51));
        remove_text.setText("CONFIRM REMOVE");
        remove_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_textActionPerformed(evt);
            }
        });
        remove_warning.add(remove_text);

        TF7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF7ActionPerformed(evt);
            }
        });

        TF6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF6ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setBackground(new java.awt.Color(237, 234, 233));
        background.setForeground(new java.awt.Color(237, 234, 233));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(105, 73, 50));
        jLabel1.setText("Employee Management");
        background.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 418, 40));

        jTable2.setModel(MODEL);
        jScrollPane2.setViewportView(jTable2);

        background.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 1320, 500));

        jButton4.setBackground(new java.awt.Color(134, 97, 72));
        jButton4.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        background.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 80, 110, 40));

        jButton5.setBackground(new java.awt.Color(134, 97, 72));
        jButton5.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        background.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 80, 120, 40));

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });
        background.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 400, 20));

        jLabel11.setBackground(new java.awt.Color(105, 73, 50));
        jLabel11.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(105, 73, 50));
        jLabel11.setText("Search:");
        background.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jButton6.setBackground(new java.awt.Color(134, 97, 72));
        jButton6.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        background.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 80, 120, 40));

        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1360, 690));

        jPanel6.setBackground(new java.awt.Color(140, 100, 75));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(1344, 70));

        jLabel8.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(226, 165, 79));

        logout_btn2.setBackground(new java.awt.Color(140, 100, 75));
        logout_btn2.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        logout_btn2.setForeground(new java.awt.Color(255, 255, 255));
        logout_btn2.setText("Log Out");
        logout_btn2.setBorder(null);
        logout_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btn2ActionPerformed(evt);
            }
        });

        return_btn913.setBackground(new java.awt.Color(140, 100, 75));
        return_btn913.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        return_btn913.setForeground(new java.awt.Color(255, 255, 255));
        return_btn913.setText("Return to Dashboard");
        return_btn913.setBorder(null);
        return_btn913.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                return_btn913ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/LOGO_topleft.png"))); // NOI18N
        jLabel9.setText("jLabel2");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/TITLELOGO_whitesmall.png"))); // NOI18N
        jLabel10.setText("jLabel1");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(570, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(return_btn913)
                        .addGap(18, 18, 18)
                        .addComponent(logout_btn2)
                        .addGap(17, 17, 17))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(logout_btn2)
                            .addComponent(return_btn913)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setSize(new java.awt.Dimension(1360, 765));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TF6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF6ActionPerformed

    private void TF7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF7ActionPerformed

    private void remove_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remove_textActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       int e = jTable2.getSelectedRow();
if (e >= 0) {
    String fname1 = (String) jTable2.getValueAt(e, 0);
    String lname1 = (String) jTable2.getValueAt(e, 1);
    String email1 = (String) jTable2.getValueAt(e, 2);
    TF5.setText(fname1); // ayusin nyo admin id to
    TF1.setText(lname1); // eto password
    TF7.setText(email1); // eto email tinatamad naako mag bago ng variables eh WAHAHAHAHAHAH
    int option = JOptionPane.showConfirmDialog(null, new Object[] {
        "ADMIN_ID:", TF5,
        "PASSWORD:", TF1,
        "EMAIL:", TF7,
    }, "Edit User", JOptionPane.OK_CANCEL_OPTION);
    if (option == JOptionPane.OK_OPTION) {
        String newFname = TF5.getText().trim(); // same lang dito basahin nyo lang yung code
        String newLname = TF1.getText().trim(); // >:/
        String newEmail = TF7.getText().trim().toLowerCase();
        if (newFname.isEmpty() || newLname.isEmpty() || newEmail.isEmpty() ||
            (!newEmail.endsWith("@gmail.com") && !newEmail.endsWith("@yahoo.com") && !newEmail.endsWith("@ue.edu.ph"))) {
            JOptionPane.showMessageDialog(null, "INVALID INPUT");
            return;
        }
        int newAdminId;
        try {
            newAdminId = Integer.parseInt(newFname);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ADMIN_ID must be a number.");
            return;
        }
        boolean duplicateExists = false;
        try {
            con.setAutoCommit(false);
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery("SELECT * FROM ADMIN");

            while (rs.next()) {
                int existingId = rs.getInt("ADMIN_ID");
                String existingEmail = rs.getString("EMAIL");
                if (existingId == Integer.parseInt(fname1)) {
                    continue;
                }
                if (newAdminId == existingId) {
                    JOptionPane.showMessageDialog(null, "EXISTING ID CAN'T BE USED");
                    duplicateExists = true;
                }
            if (newEmail.equals(existingEmail)) {
                    JOptionPane.showMessageDialog(null, "EXISTING EMAIL CAN'T BE USED");
                    duplicateExists = true;
                }
                if (duplicateExists) break;
            }
            if (duplicateExists) {
                con.rollback();
                return;
            }

        } catch (SQLException a) {
            System.out.println("SQL Error: " + a);
            JOptionPane.showMessageDialog(null, "All fields must be filled out with a valid email.");
            return;
        }
        try {
            String updateSql = "UPDATE ADMIN SET ADMIN_ID = ?, PASSWORD = ?, EMAIL = ? WHERE ADMIN_ID = ?";
            PreparedStatement pst = con.prepareStatement(updateSql);
            pst.setInt(1, newAdminId);
            pst.setString(2, newLname);
    pst.setString(3, newEmail);
            pst.setInt(4, Integer.parseInt(fname1));
            int rowsAffected = pst.executeUpdate();
            System.out.println("Rows affected: " + rowsAffected);
            if (rowsAffected > 0) {
jTable2.setValueAt(String.valueOf(newAdminId), e, 0);
jTable2.setValueAt(newLname, e, 1);
jTable2.setValueAt(newEmail, e, 2);
                JOptionPane.showMessageDialog(null, "Updated successfully.");
            } else {
                JOptionPane.showMessageDialog(null, "No matching record found to update.");
            }
            con.commit();
        } catch (SQLException ex) {
            try {
                con.rollback();
  } catch (SQLException rollbackEx) {
                rollbackEx.printStackTrace();
            }
            JOptionPane.showMessageDialog(null, "Error updating database: " + ex.getMessage());
         ex.printStackTrace();
        }
    }
} else {
    JOptionPane.showMessageDialog(null, "Please select a row to edit.");
}


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
int e = jTable2.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        if (e >= 0) {
            String idToDelete = String.valueOf(model.getValueAt(e, 0)).trim();
            System.out.println("Deleting ID: '" + idToDelete + "'");
            try {
                String sql = "DELETE FROM ADMIN WHERE ADMIN_ID = ?";
                System.out.println("Executing SQL: " + sql + " with ID: " + idToDelete);
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(idToDelete));
                int rowsAffected = pst.executeUpdate();
                System.out.println("Rows affected: " + rowsAffected);
                if (rowsAffected > 0) {
                    model.removeRow(e);
                    JOptionPane.showMessageDialog(null, "Deleted successfully.");
                } else {
                    JOptionPane.showMessageDialog(null, "No matching ID found in database.");
                }
                con.commit();
            } catch (SQLException a) {
                JOptionPane.showMessageDialog(null, "Database delete failed: " + a.getMessage());
                a.printStackTrace();
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Invalid ID format: " + nfe.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        TableRowSorter<DefaultTableModel>obj=new TableRowSorter<>(model);
        jTable2.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(jTextField4.getText().trim()));
    }//GEN-LAST:event_jTextField4KeyReleased

    private void logout_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btn2ActionPerformed
        // TODO add your handling code here:
        USER_login_menu userloginmenu = new USER_login_menu();
        this.setVisible(false);
        userloginmenu.setVisible(true);
    }//GEN-LAST:event_logout_btn2ActionPerformed

    private void return_btn913ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_return_btn913ActionPerformed
        ADMIN_Dashboard admindashboard = new ADMIN_Dashboard();
        this.dispose();
        admindashboard.setVisible(true);
    }//GEN-LAST:event_return_btn913ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        // needs code to check if the currently logged in user has ADMIN_TYPE = MANAGER before it goes into the setup screen.
        ADMIN_sign_up signup = new ADMIN_sign_up();
        this.dispose();
        signup.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
            
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ADMIN_EmployeeManagement().setVisible(true);
                }
            });
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ADMIN_EmployeeManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TF1;
    private javax.swing.JTextField TF5;
    private javax.swing.JTextField TF6;
    private javax.swing.JTextField TF7;
    private javax.swing.JPanel background;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton logout_btn2;
    private javax.swing.JMenuItem remove_text;
    private javax.swing.JPopupMenu remove_warning;
    private javax.swing.JButton return_btn913;
    // End of variables declaration//GEN-END:variables
}
