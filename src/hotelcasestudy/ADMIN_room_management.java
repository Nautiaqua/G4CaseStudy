/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelcasestudy;


import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import hotelcasestudy.ADMIN_Dashboard;
import hotelcasestudy.USER_login_menu;
import hotelcasestudy.connect;
import java.awt.Toolkit;
import java.sql.SQLException;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.sql.*;
import javax.swing.JOptionPane;






/**
 *
 * @author nejac
 */
public class ADMIN_room_management extends connect {
DefaultTableModel model = new DefaultTableModel() {
    @Override
    public boolean isCellEditable(int row, int column) {
        return false; 
    }
};
    int x=0;
    
    public ADMIN_room_management() {
        UIManager.put("Button.arc", 20);
        initComponents();
        DoConnect();
        Select();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/images/LOGO_favicon.png")));
        

    }
public void Select(){
        String [] columnsNames = {"ROOM_ID","TYPE_ID"};
        model.setColumnIdentifiers(columnsNames);
        model.setRowCount(0);
        try{
            String query = "SELECT * FROM ROOMS";
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);
            while(rs.next()){
                i=rs.getString("ROOM_ID");
                s=rs.getString("TYPE_ID");
                model.addRow(new Object []{i,s});
                x++;              
            }
        }catch(SQLException err){
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        remove_warning = new javax.swing.JPopupMenu();
        remove_text = new javax.swing.JMenuItem();
        id = new javax.swing.JTextField();
        ty = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        logout_btn2 = new javax.swing.JButton();
        return_btn913 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addroom = new javax.swing.JButton();
        deletetype = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        ty1 = new javax.swing.JTextField();
        id1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );

        remove_text.setBackground(new java.awt.Color(237, 234, 233));
        remove_text.setFont(new java.awt.Font("Liberation Sans", 1, 12)); // NOI18N
        remove_text.setForeground(new java.awt.Color(255, 51, 51));
        remove_text.setText("CONFIRM REMOVE");
        remove_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_textActionPerformed(evt);
            }
        });
        remove_warning.add(remove_text);

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(237, 234, 233));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 400, 20));

        jLabel10.setBackground(new java.awt.Color(105, 73, 50));
        jLabel10.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(105, 73, 50));
        jLabel10.setText("Room Management");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 340, -1));

        jLabel11.setBackground(new java.awt.Color(105, 73, 50));
        jLabel11.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(105, 73, 50));
        jLabel11.setText("Search");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel14.setBackground(new java.awt.Color(105, 73, 50));
        jLabel14.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(105, 73, 50));
        jLabel14.setText("Room ID:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, -1, -1));

        jPanel6.setBackground(new java.awt.Color(140, 100, 75));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(1344, 70));

        jLabel15.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(226, 165, 79));

        logout_btn2.setBackground(new java.awt.Color(140, 100, 75));
        logout_btn2.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        logout_btn2.setForeground(new java.awt.Color(255, 255, 255));
        logout_btn2.setText("Log Out");
        logout_btn2.setBorder(null);
        logout_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btn2ActionPerformed(evt);
            }
        });

        return_btn913.setBackground(new java.awt.Color(140, 100, 75));
        return_btn913.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        return_btn913.setForeground(new java.awt.Color(255, 255, 255));
        return_btn913.setText("Return to Dashboard");
        return_btn913.setBorder(null);
        return_btn913.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                return_btn913ActionPerformed(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/LOGO_topleft.png"))); // NOI18N
        jLabel16.setText("jLabel2");

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/TITLELOGO_whitesmall.png"))); // NOI18N
        jLabel17.setText("jLabel1");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(570, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(return_btn913)
                        .addGap(18, 18, 18)
                        .addComponent(logout_btn2)
                        .addGap(17, 17, 17))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(logout_btn2)
                            .addComponent(return_btn913)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 1300, 500));

        addroom.setBackground(new java.awt.Color(134, 97, 72));
        addroom.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        addroom.setForeground(new java.awt.Color(255, 255, 255));
        addroom.setText("Add Room");
        addroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addroomActionPerformed(evt);
            }
        });
        jPanel1.add(addroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 150, 130, 40));

        deletetype.setBackground(new java.awt.Color(134, 97, 72));
        deletetype.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        deletetype.setForeground(new java.awt.Color(255, 255, 255));
        deletetype.setText("Delete");
        deletetype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletetypeActionPerformed(evt);
            }
        });
        jPanel1.add(deletetype, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 150, 130, 40));

        jButton4.setBackground(new java.awt.Color(134, 97, 72));
        jButton4.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 150, 120, 40));
        jPanel1.add(ty1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 170, 277, 20));
        jPanel1.add(id1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, 277, 20));

        jLabel12.setBackground(new java.awt.Color(105, 73, 50));
        jLabel12.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(105, 73, 50));
        jLabel12.setText("Room Type:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1358, 764));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed

    }//GEN-LAST:event_idActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        TableRowSorter<DefaultTableModel>obj=new TableRowSorter<>(model);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(jTextField5.getText().trim()));
    }//GEN-LAST:event_jTextField5KeyReleased

    private void remove_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_textActionPerformed
          int e = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        if (e >= 0) {
            String idToDelete = String.valueOf(model.getValueAt(e, 0)).trim();  // Assuming ID is at column 0
            System.out.println("Deleting ID: '" + idToDelete + "'");
            try {
                String sql = "DELETE FROM ROOMS WHERE ROOM_ID = ?";
                System.out.println("Executing SQL: " + sql + " with ID: " + idToDelete);
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(idToDelete));  // Convert to int if ID is numeric
                int rowsAffected = pst.executeUpdate();
                System.out.println("Rows affected: " + rowsAffected);
                if (rowsAffected > 0) {
                    model.removeRow(e);
                    JOptionPane.showMessageDialog(null, "Deleted successfully.");
                } else {
                    JOptionPane.showMessageDialog(null, "No matching ID found in database.");
                }
                con.commit();
            } catch (SQLException a) {
                JOptionPane.showMessageDialog(null, "Database delete failed: " + a.getMessage());
                a.printStackTrace();
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Invalid ID format: " + nfe.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.");
        }
    }//GEN-LAST:event_remove_textActionPerformed

    private void logout_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btn2ActionPerformed
        // TODO add your handling code here:
        USER_login_menu userloginmenu = new USER_login_menu();
        this.setVisible(false);
        userloginmenu.setVisible(true);
    }//GEN-LAST:event_logout_btn2ActionPerformed

    private void return_btn913ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_return_btn913ActionPerformed
        ADMIN_Dashboard admindashboard = new ADMIN_Dashboard();
        this.dispose();
        admindashboard.setVisible(true);
    }//GEN-LAST:event_return_btn913ActionPerformed

    private void addroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addroomActionPerformed
boolean recordExists = false;
try {
    con.setAutoCommit(false);
    stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String roomi = id1.getText().trim();  
    String roomt = ty1.getText().trim(); 
    if (roomi.isEmpty() || roomt.isEmpty()) {
        JOptionPane.showMessageDialog(null, "All fields must be filled.");
        return;
    }
    int roomid = Integer.parseInt(roomi);
    int typeid = Integer.parseInt(roomt);
    ResultSet rs = stmt.executeQuery("SELECT ROOM_ID FROM ROOMS WHERE ROOM_ID = " + roomid);
    if (rs.next()) {
        JOptionPane.showMessageDialog(null, "Room ID already exists.");
        rs.close();
        return;
    }
    rs.close();
    rs = stmt.executeQuery("SELECT * FROM ROOMS");
    rs.moveToInsertRow();
    rs.updateInt("ROOM_ID", roomid);
    rs.updateInt("TYPE_ID", typeid);
    rs.insertRow();
    con.commit();
    Select(); 
    JOptionPane.showMessageDialog(null, "Room added successfully.");
} catch (NumberFormatException ne) {
    JOptionPane.showMessageDialog(null, "Room ID and Type ID must be integers.");
    ne.printStackTrace();
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
    e.printStackTrace();
}
    }//GEN-LAST:event_addroomActionPerformed

    private void deletetypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletetypeActionPerformed
        remove_warning.show(deletetype, 0, deletetype.getHeight());
    }//GEN-LAST:event_deletetypeActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      int selectedRow = jTable1.getSelectedRow();
if (selectedRow >= 0) {
    String oldRoomId = jTable1.getValueAt(selectedRow, 0).toString(); 
    String oldTypeId = jTable1.getValueAt(selectedRow, 1).toString();
    id.setText(oldRoomId);
    ty.setText(oldTypeId);
    int option = JOptionPane.showConfirmDialog(null, new Object[] {
        "Room ID:", id,
        "Type ID:", ty
    }, "Edit Room", JOptionPane.OK_CANCEL_OPTION);

    if (option == JOptionPane.OK_OPTION) {
        String newRoomId = id.getText().trim();
        String newTypeId = ty.getText().trim();

        if (newRoomId.isEmpty() || newTypeId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields must be filled out.");
            return;
        }
        try {
            int roomIdInt = Integer.parseInt(newRoomId);
            int typeIdInt = Integer.parseInt(newTypeId);
            boolean duplicate = false;
            Statement stmtCheck = con.createStatement();
            ResultSet rsCheck = stmtCheck.executeQuery("SELECT ROOM_ID FROM ROOMS");
            while (rsCheck.next()) {
                int existingId = rsCheck.getInt("ROOM_ID");
                if (existingId == roomIdInt && existingId != Integer.parseInt(oldRoomId)) {
                    duplicate = true;
                    break;
                }
            }
            rsCheck.close();
            stmtCheck.close();

            if (duplicate) {
                JOptionPane.showMessageDialog(null, "Room ID already exists.");
                return;
            }
            String updateSQL = "UPDATE ROOMS SET ROOM_ID = ?, TYPE_ID = ? WHERE ROOM_ID = ?";
            PreparedStatement pst = con.prepareStatement(updateSQL);
            pst.setInt(1, roomIdInt);
            pst.setInt(2, typeIdInt);
            pst.setInt(3, Integer.parseInt(oldRoomId));

            int rowsUpdated = pst.executeUpdate();
            if (rowsUpdated > 0) {
                jTable1.setValueAt(typeIdInt, selectedRow, 1);
                jTable1.setValueAt(roomIdInt, selectedRow, 0);
                JOptionPane.showMessageDialog(null, "Room updated successfully.");
                con.commit();
            } else {
                JOptionPane.showMessageDialog(null, "No matching record found.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Room ID and Type ID must be integers.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
            ex.printStackTrace();
        }
    }
} else {
    JOptionPane.showMessageDialog(null, "Please select a row to edit.");
}
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        
    
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(ADMIN_room_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(ADMIN_room_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(ADMIN_room_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(ADMIN_room_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ADMIN_room_management().setVisible(true);
                }
            });
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ADMIN_room_management.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ADMIN_room_management.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ADMIN_room_management.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ADMIN_room_management.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addroom;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton deletetype;
    private javax.swing.JTextField id;
    private javax.swing.JTextField id1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JButton logout_btn2;
    private javax.swing.JMenuItem remove_text;
    private javax.swing.JPopupMenu remove_warning;
    private javax.swing.JButton return_btn913;
    private javax.swing.JTextField ty;
    private javax.swing.JTextField ty1;
    // End of variables declaration//GEN-END:variables
}
