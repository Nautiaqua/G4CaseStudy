/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelcasestudy;


import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Nardz Ablaza
 */
public class ADMIN_ReservationManagement extends connect {
DefaultTableModel tbModel1 = new DefaultTableModel() {
    @Override
    public boolean isCellEditable(int row, int column) {
        return false; 
    }
};
    int x=0;
    
    public ADMIN_ReservationManagement() {
        initComponents();
        DoConnect();
        Select();
      
    }
 public void Select() {
    String[] columnsNames = {"RESERVATION_ID", "USER_EMAIL", "ROOM_ID", "TOTAL_PRICE", "STATUS", "CREATED_ON", "ADULTS", "CHILDREN", "DATE_RES", "CHECKOUT", "CHECKIN"};
    tbModel1.setColumnIdentifiers(columnsNames);
    try {
        String query = "SELECT * FROM reservations";
        stmt = con.createStatement();
        rs = stmt.executeQuery(query);

        while (rs.next()) {
            i = rs.getString("RESERVATION_ID");
            s = rs.getString("USER_EMAIL");
            n = rs.getString("ROOM_ID");
            u = rs.getString("TOTAL_PRICE");
            q = rs.getString("STATUS");
            a = rs.getString("CREATED_ON");
            w = rs.getString("ADULTS");
            e = rs.getString("CHILDREN");
            r = rs.getString("DATE_RES");
            d = rs.getString("CHECKOUT");
            f = rs.getString("CHECKIN");

            tbModel1.addRow(new Object[]{i, s, n, u, q, a, w, e, r, d, f});
            x++;
        }

        // OPTIONAL: Set the model to your table if not already done
        jTable1.setModel(tbModel1); // Replace jTable1 with your actual JTable variable
    } catch (SQLException err) {
        err.printStackTrace(); // Show the error so you can debug
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        remove_warning = new javax.swing.JPopupMenu();
        remove_text = new javax.swing.JMenuItem();
        user = new javax.swing.JTextField();
        room = new javax.swing.JTextField();
        roomt = new javax.swing.JTextField();
        ci = new javax.swing.JTextField();
        co = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        stat = new javax.swing.JTextField();
        child = new javax.swing.JSpinner();
        adult = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        logout_btn2 = new javax.swing.JButton();
        return_btn913 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        remove_text.setBackground(new java.awt.Color(237, 234, 233));
        remove_text.setFont(new java.awt.Font("Liberation Sans", 1, 12)); // NOI18N
        remove_text.setForeground(new java.awt.Color(255, 51, 51));
        remove_text.setText("CONFIRM REMOVE");
        remove_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_textActionPerformed(evt);
            }
        });
        remove_warning.add(remove_text);

        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomActionPerformed(evt);
            }
        });

        child.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        adult.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(140, 100, 75));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(1344, 70));

        jLabel8.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(226, 165, 79));

        logout_btn2.setBackground(new java.awt.Color(140, 100, 75));
        logout_btn2.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        logout_btn2.setForeground(new java.awt.Color(255, 255, 255));
        logout_btn2.setText("Log Out");
        logout_btn2.setBorder(null);
        logout_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btn2ActionPerformed(evt);
            }
        });

        return_btn913.setBackground(new java.awt.Color(140, 100, 75));
        return_btn913.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        return_btn913.setForeground(new java.awt.Color(255, 255, 255));
        return_btn913.setText("Return to Dashboard");
        return_btn913.setBorder(null);
        return_btn913.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                return_btn913ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/LOGO_topleft.png"))); // NOI18N
        jLabel9.setText("jLabel2");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/TITLELOGO_whitesmall.png"))); // NOI18N
        jLabel10.setText("jLabel1");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(570, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(return_btn913)
                        .addGap(18, 18, 18)
                        .addComponent(logout_btn2)
                        .addGap(17, 17, 17))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(logout_btn2)
                            .addComponent(return_btn913)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.setBackground(new java.awt.Color(237, 234, 233));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(tbModel1);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 1290, 510));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(105, 73, 50));
        jLabel1.setText("Reservation Management");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 579, -1));

        jButton4.setBackground(new java.awt.Color(134, 97, 72));
        jButton4.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("EDIT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 120, 50));

        jButton3.setBackground(new java.awt.Color(134, 97, 72));
        jButton3.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("DELETE USER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 170, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1344, 690));

        setSize(new java.awt.Dimension(1360, 765));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
int e = jTable1.getSelectedRow();
if (e >= 0) {
    String users = (String) jTable1.getValueAt(e, 1);  
    String roomid = (String) jTable1.getValueAt(e, 2); 
    String totalp = (String) jTable1.getValueAt(e, 3);  
    String status = (String) jTable1.getValueAt(e, 4);   
    String adult1 = (String) jTable1.getValueAt(e, 6);  
    String child1 = (String) jTable1.getValueAt(e, 7);   
    String dateres = (String) jTable1.getValueAt(e, 8);  
    String checkout = (String) jTable1.getValueAt(e, 9); 
    String checkin = (String) jTable1.getValueAt(e, 10); 
    user.setText(users);
    room.setText(roomid);
    total.setText(totalp);
    stat.setText(status);
    try {
    adult.setValue(Integer.parseInt(adult1.trim()));
    child.setValue(Integer.parseInt(child1.trim()));
} catch (NumberFormatException ex) {
    JOptionPane.showMessageDialog(null, "Adults and Children must be numeric values.");
    return;
}

    date.setText(dateres);
    co.setText(checkout);
    ci.setText(checkin);
    int option = JOptionPane.showConfirmDialog(null, new Object[] {
        "USER:", user,
        "ROOMID:", room,
        "TOTAL:", total,
        "STATUS:", stat,
        "ADULT:", adult,
        "CHILD:", child,
        "DATE:", date,
        "CHECKOUT:", co,
        "CHECKIN:", ci,
    }, "Edit User", JOptionPane.OK_CANCEL_OPTION);
    if (option == JOptionPane.OK_OPTION) {
        String newuser = user.getText().trim().toLowerCase();
        String newroom = room.getText().trim();
        String newtotal = total.getText().trim();
        String newstat = stat.getText().trim();
        String newadult = String.valueOf(adult.getValue()).trim();
        String newchild = String.valueOf(child.getValue()).trim();
        String newdate = date.getText().trim();
        String newco = co.getText().trim();
        String newci = ci.getText().trim();
        if (newuser.isEmpty() || newroom.isEmpty() || newtotal.isEmpty() || newstat.isEmpty() || newadult.isEmpty() || newchild.isEmpty()|| newdate.isEmpty()|| newco.isEmpty()|| newci.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields must be filled out.");
            return;
        }
        try {
            String sql = "UPDATE RESERVATIONS SET ROOM_ID = ?, TOTAL_PRICE = ?, STATUS = ?, ADULTS = ?, CHILDREN = ?, DATE_RES = ?, CHECKOUT = ?, CHECKIN = ? WHERE LOWER(TRIM(USER_EMAIL)) = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, newroom);
            pst.setString(2, newtotal);
            pst.setString(3, newstat);
            pst.setInt(4, Integer.parseInt(newadult));
            pst.setInt(5, Integer.parseInt(newchild));
            pst.setString(6, newdate);
            pst.setString(7, newco);
            pst.setString(8, newci);
            pst.setString(9, newuser);
            int rowsAffected = pst.executeUpdate();
            System.out.println("Rows affected: " + rowsAffected);
            if (rowsAffected > 0) {
                jTable1.setValueAt(newuser, e, 1);
                jTable1.setValueAt(newroom, e, 2);
                jTable1.setValueAt(newtotal, e, 3);
                jTable1.setValueAt(newstat, e, 4);
                jTable1.setValueAt(newadult, e, 6);
                jTable1.setValueAt(newchild, e, 7);
                jTable1.setValueAt(newdate, e, 8);
                jTable1.setValueAt(newco, e, 9);
                jTable1.setValueAt(newci, e, 10);
                JOptionPane.showMessageDialog(null, "Updated successfully.");
            } else {
                JOptionPane.showMessageDialog(null, "No matching email found in the database.");
            }
            con.commit();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error updating database: " + ex.getMessage());
            ex.printStackTrace();
        }
    }
} else {
    JOptionPane.showMessageDialog(null, "Please select a row to edit.");
}


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        remove_warning.show(jButton3, 0, jButton3.getHeight());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void logout_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btn2ActionPerformed
        // TODO add your handling code here:
        USER_login_menu userloginmenu = new USER_login_menu();
        this.setVisible(false);
        userloginmenu.setVisible(true);
    }//GEN-LAST:event_logout_btn2ActionPerformed

    private void return_btn913ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_return_btn913ActionPerformed
        ADMIN_Dashboard admindashboard = new ADMIN_Dashboard();
        this.dispose();
        admindashboard.setVisible(true);
    }//GEN-LAST:event_return_btn913ActionPerformed

    private void remove_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_textActionPerformed
        // TODO add your handling code here:
        int e = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        if (e >= 0) {
            String idToDelete = String.valueOf(model.getValueAt(e, 0)).trim();  // Assuming ID is at column 0
            System.out.println("Deleting ID: '" + idToDelete + "'");
            try {
                String sql = "DELETE FROM RESERVATIONS WHERE RESERVATION_ID = ?";
                System.out.println("Executing SQL: " + sql + " with ID: " + idToDelete);
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(idToDelete));  // Convert to int if ID is numeric
                int rowsAffected = pst.executeUpdate();
                System.out.println("Rows affected: " + rowsAffected);
                if (rowsAffected > 0) {
                    model.removeRow(e);
                    JOptionPane.showMessageDialog(null, "Deleted successfully.");
                } else {
                    JOptionPane.showMessageDialog(null, "No matching ID found in database.");
                }
                con.commit();
            } catch (SQLException a) {
                JOptionPane.showMessageDialog(null, "Database delete failed: " + a.getMessage());
                a.printStackTrace();
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Invalid ID format: " + nfe.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.");
        }
    }//GEN-LAST:event_remove_textActionPerformed

    private void roomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
            
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ADMIN_ReservationManagement().setVisible(true);
                }
            });
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ADMIN_ReservationManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner adult;
    private javax.swing.JSpinner child;
    private javax.swing.JTextField ci;
    private javax.swing.JTextField co;
    private javax.swing.JTextField date;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logout_btn2;
    private javax.swing.JMenuItem remove_text;
    private javax.swing.JPopupMenu remove_warning;
    private javax.swing.JButton return_btn913;
    private javax.swing.JTextField room;
    private javax.swing.JTextField roomt;
    private javax.swing.JTextField stat;
    private javax.swing.JTextField time;
    private javax.swing.JTextField total;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables

   
}
